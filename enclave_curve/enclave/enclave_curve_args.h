/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_ENCLAVE_CURVE_ARGS_H
#define EDGER8R_ENCLAVE_CURVE_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
#include "common/shared.h"

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _enclave_SetCurveZMQ_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    int clientOrServer;
} enclave_SetCurveZMQ_args_t;

typedef struct _enclave_ExportSealedPrivateKey_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    sealed_data_t** sealed_prikey;
    size_t* sealed_prikey_len;
    uint8_t** pubkey;
    size_t* pubkey_len;
} enclave_ExportSealedPrivateKey_args_t;

typedef struct _enclave_ImportSealedPrivateKey_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    sealed_data_t* sealed_prikey;
    size_t sealed_prikey_len;
    uint8_t* pubkey;
    size_t pubkey_len;
} enclave_ImportSealedPrivateKey_args_t;

typedef struct _enclave_ImportServerPublicKey_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* pubkey;
    size_t pubkey_len;
} enclave_ImportServerPublicKey_args_t;

typedef struct _enclave_ProduceHello_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t** hello_msg;
    size_t* hello_msg_len;
} enclave_ProduceHello_args_t;

typedef struct _enclave_ProcessHello_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* hello_msg;
    size_t hello_msg_len;
} enclave_ProcessHello_args_t;

typedef struct _enclave_ProduceWelcome_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t** welcome_msg;
    size_t* welcome_msg_len;
} enclave_ProduceWelcome_args_t;

typedef struct _enclave_ProcessWelcome_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* welcome_msg;
    size_t welcome_msg_len;
} enclave_ProcessWelcome_args_t;

typedef struct _enclave_ProduceInitiate_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* metadata_plaintext_;
    size_t metadata_length;
    uint8_t** initiate_msg;
    size_t* initiate_msg_len;
} enclave_ProduceInitiate_args_t;

typedef struct _enclave_ProcessInitiate_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* initiate_msg;
    size_t initiate_msg_len;
    uint8_t** metadata_plaintext;
    size_t* metadata_length;
} enclave_ProcessInitiate_args_t;

typedef struct _enclave_ProduceReady_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* metadata_;
    size_t metadata_length;
    uint8_t** ready_msg;
    size_t* ready_msg_len;
} enclave_ProduceReady_args_t;

typedef struct _enclave_ProcessReady_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* ready_msg;
    size_t ready_msg_len;
    uint8_t** metadata_;
    size_t* metadata_length;
} enclave_ProcessReady_args_t;

typedef struct _enclave_ProduceMessage_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* msg;
    size_t msg_len;
    uint8_t** enc_msg;
    size_t* enc_msg_len;
} enclave_ProduceMessage_args_t;

typedef struct _enclave_ProcessMessage_args_t
{
    oe_result_t _result;
    oe_result_t _retval;
    uint8_t* enc_msg;
    size_t enc_msg_len;
    uint8_t** msg;
    size_t* msg_len;
} enclave_ProcessMessage_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    enclave_curve_fcn_id_enclave_SetCurveZMQ = 0,
    enclave_curve_fcn_id_enclave_ExportSealedPrivateKey = 1,
    enclave_curve_fcn_id_enclave_ImportSealedPrivateKey = 2,
    enclave_curve_fcn_id_enclave_ImportServerPublicKey = 3,
    enclave_curve_fcn_id_enclave_ProduceHello = 4,
    enclave_curve_fcn_id_enclave_ProcessHello = 5,
    enclave_curve_fcn_id_enclave_ProduceWelcome = 6,
    enclave_curve_fcn_id_enclave_ProcessWelcome = 7,
    enclave_curve_fcn_id_enclave_ProduceInitiate = 8,
    enclave_curve_fcn_id_enclave_ProcessInitiate = 9,
    enclave_curve_fcn_id_enclave_ProduceReady = 10,
    enclave_curve_fcn_id_enclave_ProcessReady = 11,
    enclave_curve_fcn_id_enclave_ProduceMessage = 12,
    enclave_curve_fcn_id_enclave_ProcessMessage = 13,
    enclave_curve_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    enclave_curve_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_ENCLAVE_CURVE_ARGS_H
